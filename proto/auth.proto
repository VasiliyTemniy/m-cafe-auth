syntax = "proto3";
package auth;
option go_package = "simple-micro-auth/proto";

service AuthService {
  rpc CreateAuth (AuthRequest) returns (AuthResponse);
  rpc UpdateAuth (UpdateAuthRequest) returns (AuthResponse);
  rpc DeleteAuth (DeleteAuthRequest) returns (DeleteAuthResponse);
  rpc GrantAuth (AuthRequest) returns (AuthResponse);
  rpc VerifyCredentials (CredentialsRequest) returns (VerifyResponse);
  rpc VerifyToken (VerifyTokenRequest) returns (AuthResponse);
  rpc RefreshToken (RefreshTokenRequest) returns (AuthResponse);
  rpc GetPublicKey (PublicKeyRequest) returns (PublicKeyResponse);
  rpc FlushDB (FlushDBRequest) returns (FlushDBResponse);
  rpc Ping (PingRequest) returns (PingResponse);
}


// Requests

message AuthRequest {
  string user_id = 1;
  string app_id = 2;
  string password = 3;
  string ttl = 4;
}

message UpdateAuthRequest {
  string user_id = 1;
  string app_id = 2;
  string old_password = 3;
  string new_password = 4;
  string ttl = 5;
}

message CredentialsRequest {
  string user_id = 1;
  string app_id = 2;
  string password = 3;
}

message DeleteAuthRequest {
  string user_id = 1;
  string app_id = 2;
}

message VerifyTokenRequest {
  string token = 1;
}

message RefreshTokenRequest {
  string token = 1;
  string ttl = 2;
}

message PublicKeyRequest {
  string target = 1;
}

message FlushDBRequest {
  string reason = 1;
}

message PingRequest {
  string message = 1;
}


// Responses

message AuthResponse {
  string id = 1;
  string token = 2;
  string error = 3;
}

message VerifyResponse {
  bool success = 1;
  string error = 2;
}

message DeleteAuthResponse {
  string error = 1;
}

message PublicKeyResponse {
  bytes public_key = 1;
  string error = 2;
}

message FlushDBResponse {
  string error = 1;
}

message PingResponse {
  string message = 1;
}